name: Build:Main
on:
  push:
    branches: [ master, test-ready, mac_build ]
jobs:
  build-libraries:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    env:
      CLIENTREPO: ${GITHUB_WORKSPACE}/client
    steps:
    - name: install AWS requirements
      id: install-aws-requirements
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt install -y libcurl4-openssl-dev libssl-dev uuid-dev zlib1g-dev libpulse-dev
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew update
          brew install openssl@1.1 readline
          brew install cmake
        else
          echo "$RUNNER_OS not supported"
          exit 1
        fi
    - name: Cache AWS C++ sdk
      id: cache-aws-sdk-cpp
      uses: actions/cache@v2
      env:
        cache-name: aws-sdk-cpp
      with:
        path: aws-sdk-cpp
        key: aws-sdk-cpp-v2-${{ runner.os }}
    - name: Download AWS C++ sdk
      uses: actions/checkout@v2
      if: steps.cache-aws-sdk-cpp.outputs.cache-hit != 'true'
      with:
        repository: aws/aws-sdk-cpp
        submodules: recursive
        ref: 1.9.177
        path: aws-sdk-cpp
    - name: Build AWS C++ sdk shared library
      if: steps.cache-aws-sdk-cpp.outputs.cache-hit != 'true'
      run: |
        mkdir aws-sdk-cpp/build
        cd aws-sdk-cpp/build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY="s3" -DBUILD_SHARED_LIBS=ON -DENABLE_TESTING=OFF -DCMAKE_PREFIX_PATH=/usr/local
        make
    - name: Build AWS C++ sdk static library
      if: steps.cache-aws-sdk-cpp.outputs.cache-hit != 'true'
      run: |
        mkdir aws-sdk-cpp/build_static
        cd aws-sdk-cpp/build_static
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_ONLY="s3" -DBUILD_SHARED_LIBS=OFF -DENABLE_TESTING=OFF -DCMAKE_PREFIX_PATH=/usr/local
        make
    - name: Install AWS C++ sdk shared library
      run: |
        cd aws-sdk-cpp/build
        sudo make install
    - name: Download zstd
      uses: dsaltares/fetch-gh-release-asset@0.0.5
      with:
        repo: "facebook/zstd"
        version: "tags/v1.4.9"
        file: zstd-1.4.9.tar.gz
    - name: Cache zstd
      id: cache-zstd
      uses: actions/cache@v2
      env:
        cache-name: zstd
      with:
        path: zstd-1.4.9
        key: zstd-1.4.9-${{ runner.os }}
    - name: Build zstd
      id: build-zstd
      if: steps.cache-zstd.outputs.cache-hit != 'true'
      run: |
        tar xvfz zstd-1.4.9.tar.gz && cd zstd-1.4.9
        make
        #make test
    - name: install zstd
      run: |
        cd zstd-1.4.9
        sudo make install
    - name: Checkout c client
      uses: actions/checkout@v2
      with:
        repository: aerospike/aerospike-client-c
        submodules: recursive
        ref: 6.0.0
        path: client
    - name: Checkout asbackup
      uses: actions/checkout@v2
      with: 
        path: main
        submodules: recursive
    - name: Build client lib
      run: make
      working-directory: client
    - name: Build asbackup
      run: |
        make
        cp -r bin dyn_bin
        make clean
      working-directory: main
    - name: Uninstall AWS C++ sdk shared library
      run: |
          sudo rm /usr/local/lib/libaws-cpp-*
    - name: Install AWS C++ sdk static library
      run: |
        cd aws-sdk-cpp/build_static
        sudo make install
    - name: Build asbackup with static link to zstd and aws-sdk-cpp
      run: |
        make LINK_ZSTD_STATIC=1 AWS_SDK_STATIC_PATH=/usr/local/lib
        cp -r bin static_bin
        make clean
      working-directory: main
    - name: Upload asbackup artifact
      uses: actions/upload-artifact@v2
      with: 
        name: asbackup-${{ runner.os }}
        path: main/dyn_bin/asbackup
        if-no-files-found: error
    - name: Upload asrestore artifact
      uses: actions/upload-artifact@v2
      with: 
        name: asrestore-${{ runner.os }}
        path: main/dyn_bin/asrestore
        if-no-files-found: error
    - name: Upload static zstd asbackup artifact
      uses: actions/upload-artifact@v2
      with: 
        name: asbackup-static-${{ runner.os }}
        path: main/static_bin/asbackup
        if-no-files-found: error
    - name: Upload static zstd asrestore artifact
      uses: actions/upload-artifact@v2
      with: 
        name: asrestore-static-${{ runner.os }}
        path: main/static_bin/asrestore
        if-no-files-found: error
  pre-release:
    needs: build-libraries
    runs-on: ubuntu-latest

    steps: 
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3.1

      - name: Checkout asbackup
        uses: actions/checkout@v2
        with: 
          submodules: recursive
      - name: Get artifacts
        uses: actions/download-artifact@v2
        with: 
          path: binaries/
      - name: Create tarball
        run: tar -czf binaries.tar.gz binaries
      - name: Automatic Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "latest"
          prerelease: true
          title: "Snapshot Build"
          files: |
            binaries.tar.gz
            LICENSE.md
            README.md
